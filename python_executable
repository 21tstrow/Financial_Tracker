user_choice = raw_input("Do you want to import a pre-existing account? Type yes or no:").lower()

budgets = []
categories = []
global wxyz
global user_filename
if user_choice == "yes":
  imported_file = raw_input("What is the file name? Include capitals and punctuation. Be careful! Type here: ")
  global user_filename
  user_filename = imported_file
  num_rows = 0
  files = open(user_filename, "r")
  userlines = files.readlines()
  
  for i in userlines:
    i = i.rstrip('\n')
    try:
      budgets.append(float(i.rstrip('\n')))
    except ValueError:
      categories.append(i.rstrip('\n'))
  categories = filter(None, categories)
  for i in categories:
    num_rows += 1
  global wxyz
  wxyz = num_rows
else:
  num_rows = int(raw_input("How many categories do you want to track? Type the number here in integer form: "))
  global wxyz
  wxyz = num_rows
  v = 1
  while v <= num_rows:
    categories.append(raw_input(("Type category #%s here: ") % (v)))
    budgets.append(int(raw_input(("Type the budget for category #%s here: ") % (v))))
    v += 1

  global user_filename
  user_filename = raw_input("What do you want your file name to be?")


def cat_display():
  open(user_filename, "w").close()
  global user_filename
  files = open(user_filename, "a+")
  for i in categories:
    files.write(i + "\n")
  files.write("\n")
  for c in budgets:
    files.write(str(c) + "\n") 
  files.close()
  files = open(user_filename, "r")
  contents = files.read()
  print budgets
  print categories
  print " "
  print " "
  print " "
  print "[Category] [Budget Remaining]"
  i = 0
  while i != num_rows:
    print "%s" % (categories[i]),
    l = 0
  
    if len(categories[i]) < 10:
      xyz = 10 - len(categories[i]) - 3
      l = 0
      if xyz % 2 == 1:
        l = 1
      while not((xyz < 0)):
        print " ",
        xyz -= 2

    print "= ",
    print "%s" % ("$" + str(budgets[i]))
    print " "
    i += 1

cat_display()
i = 0

options = ["Deposit All", "Deposit One", "Withdraw", "Transfer", "Toggle Percentages", "Help"]

options_compare = ["deposit all", "deposit one", "withdraw", "transfer", "toggle percentages", "help"]

totals_dict = {}
v = len(categories) - 1
while v != -1:
  totals_dict.update({categories[v] : budgets[v]})
  v -= 1
print totals_dict

def user_actions():
  print "What would you like to do?"
  i = 0
  while i != 6:
    print "-",
    print options[i]
    i += 1
  global user_next
  user_next = raw_input("Type here:").lower()
  def spell_check():
    global user_next
    testcase1 = 1
    for i in options_compare:
      if i == user_next:
        testcase1 = 0
    if testcase1 != 0:
      print " "
      print "Double check your spelling and try again; the dash in front of the choice isn't necessary"
      user_next = raw_input("Type here: ").lower()
      spell_check()    
  spell_check()
  if user_next == "deposit all":
    deposit_all()
  if user_next == "deposit one":
    deposit_one()
  if user_next == "withdraw":
    withdraw()
  if user_next == "transfer":
    transfer()
  if user_next == "toggle percentages":
    toggle_percentages()
  if user_next == "help":
    h_elp()
  user_actions()



def deposit_one():
  testcase = 1
  print "Which category would you like to add funds to?"
  global user_cat1
  user_cat1 = raw_input("Type here: ")
  def spell_check2():
    testcase = 1
    global user_cat1
    for i in budgets:
      if i == user_cat1:
        testcase = 0
    if testcase == 0:
      print ("Double check your spelling and capitals and try again: ")
      user_cat1 = raw_input("Type here: ")
      spell_check2()
  spell_check2()
  print "How much would you like to deposit?"
  global dep_amount
  dep_amount = float(raw_input("Type here: "))  
  for i in categories:
    if i == user_cat1:
      budgets[categories.index(user_cat1)] += dep_amount
  cat_display()

def h_elp():
  print """
  These are what each option entails. To choose one, just type its name, spaces and all.

  Deposit All --- This deposits any funds you wish to add divided up into all of your categories at once. 
  It divides based on your percentages, which you can change by using \"Toggle Percentages\". 
  Without changing your percentages, Deposit All will put funds into each of your categories evenly.

  Deposit One --- This directly deposits any funds you wish to add soley into one specified category.

  Withdraw --- This allows you to remove funds from one category

  Transfer --- This allows you to move funds from one caategory to another

  Toggle Percentages --- This allows you to change the percentages used in \"Deposit All\".

  Help --- Prints the above menu
  """

global percentages
percentages = {}
base_percent = 1.0 / wxyz
for c in categories:
  percentages.update({c : base_percent})

def toggle_percentages():
  for i in categories:
    print "What would you like the deposit percentage to be for " + i + "?"
    user_percentage = (float(raw_input("Type here: ")))/100
    percentages[i] = user_percentage
  print " "
    
def deposit_all():
  print "How much would you like to deposit?"
  dep_value = float(raw_input("Type here: "))
  for i in categories:
    current_percent = percentages.get(i)
    budgets[categories.index(i)] += (dep_value * current_percent)
  cat_display()

def withdraw():
  testcase = 1
  print "Which category would you like to remove funds from?"
  global user_cat1
  user_cat1 = raw_input("Type here: ")
  def spell_check2():
    testcase = 1
    global user_cat1
    for i in budgets:
      if i == user_cat1:
        testcase = 0
    if testcase == 0:
      print ("Double check your spelling and capitals and try again: ")
      user_cat1 = raw_input("Type here: ")
      spell_check2()
  spell_check2()
  print "How much would you like to withdraw?"
  global dep_amount
  dep_amount = float(raw_input("Type here: "))  
  for i in categories:
    if i == user_cat1:
      budgets[categories.index(user_cat1)] -= dep_amount
  cat_display()

def transfer():
  testcase = 1
  print "Which category would you like to transfer funds from?"
  global user_cat1
  user_cat1 = raw_input("Type here: ")
  def spell_check2():
    testcase = 1
    global user_cat1
    for i in budgets:
      if i == user_cat1:
        testcase = 0
    if testcase == 0:
      print ("Double check your spelling and capitals and try again: ")
      user_cat1 = raw_input("Type here: ")
      spell_check2()
  spell_check2()
  def spell_check3():
    testcase = 1
    global user_cat2
    for i in budgets:
      if i == user_cat2:
        testcase = 0
    if testcase == 0:
      print ("Double check your spelling and capitals and try again: ")
      user_cat2 = raw_input("Type here: ")
      spell_check3()
  spell_check2()
  print "Which category would you like to transfer funds to?"
  global user_cat2
  user_cat2 = raw_input("Type here: ")
  spell_check3
  print "How much would you like to transfer?"
  global transfer_amount
  transfer_amount = float(raw_input("Type here: "))  
  for i in categories:
    if i == user_cat1:
      budgets[categories.index(user_cat1)] -= transfer_amount
    if i == user_cat1:
      budgets[categories.index(user_cat2)] += transfer_amount
  cat_display()


user_actions()
#Use files to keep info
